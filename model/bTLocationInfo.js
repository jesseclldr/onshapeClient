"use strict";
/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.93
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BTLocationInfo = void 0;
var BTLocationInfo = /** @class */ (function () {
    function BTLocationInfo() {
    }
    BTLocationInfo.getAttributeTypeMap = function () {
        return BTLocationInfo.attributeTypeMap;
    };
    BTLocationInfo.discriminator = undefined;
    BTLocationInfo.attributeTypeMap = [
        {
            "name": "fromNode",
            "baseName": "fromNode",
            "type": "BTPNode"
        },
        {
            "name": "endColumn",
            "baseName": "endColumn",
            "type": "number"
        },
        {
            "name": "line",
            "baseName": "line",
            "type": "number"
        },
        {
            "name": "elementMicroversion",
            "baseName": "elementMicroversion",
            "type": "string"
        },
        {
            "name": "version",
            "baseName": "version",
            "type": "string"
        },
        {
            "name": "document",
            "baseName": "document",
            "type": "string"
        },
        {
            "name": "topLevel",
            "baseName": "topLevel",
            "type": "string"
        },
        {
            "name": "languageVersion",
            "baseName": "languageVersion",
            "type": "number"
        },
        {
            "name": "moduleIds",
            "baseName": "moduleIds",
            "type": "BTDocumentVersionElementIds"
        },
        {
            "name": "changeableChildFieldIndices",
            "baseName": "changeableChildFieldIndices",
            "type": "Array<number>"
        },
        {
            "name": "column",
            "baseName": "column",
            "type": "number"
        },
        {
            "name": "endLine",
            "baseName": "endLine",
            "type": "number"
        },
        {
            "name": "character",
            "baseName": "character",
            "type": "number"
        },
        {
            "name": "parseNodeId",
            "baseName": "parseNodeId",
            "type": "string"
        },
        {
            "name": "endCharacter",
            "baseName": "endCharacter",
            "type": "number"
        },
        {
            "name": "parseNodeIdRaw",
            "baseName": "parseNodeIdRaw",
            "type": "BTObjectId"
        },
        {
            "name": "nodeId",
            "baseName": "nodeId",
            "type": "string"
        },
        {
            "name": "childMapIndices",
            "baseName": "childMapIndices",
            "type": "Array<number>"
        },
        {
            "name": "atomicChildIndices",
            "baseName": "atomicChildIndices",
            "type": "Array<number>"
        },
        {
            "name": "nodeIdRaw",
            "baseName": "nodeIdRaw",
            "type": "BTObjectId"
        },
        {
            "name": "firstChildField",
            "baseName": "firstChildField",
            "type": "number"
        },
        {
            "name": "childListIndices",
            "baseName": "childListIndices",
            "type": "Array<number>"
        },
        {
            "name": "typeId",
            "baseName": "typeId",
            "type": "number"
        },
        {
            "name": "exportTypeName",
            "baseName": "exportTypeName",
            "type": "string"
        },
        {
            "name": "connectionSource",
            "baseName": "connectionSource",
            "type": "BTConnection"
        },
        {
            "name": "unknownClass",
            "baseName": "unknownClass",
            "type": "boolean"
        }
    ];
    return BTLocationInfo;
}());
exports.BTLocationInfo = BTLocationInfo;
