/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.93
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { BTNameValuePair } from './bTNameValuePair';

export class BTAssociativeDataParams {
    'type'?: BTAssociativeDataParams.TypeEnum;
    'data'?: Array<BTNameValuePair>;
    'microversionId'?: string;
    'documentMicroversion'?: string;
    'associativeDataId'?: string;
    'operation'?: BTAssociativeDataParams.OperationEnum;
    'viewId'?: string;
    'occurrenceId'?: string;
    'isHiddenBaseView'?: boolean;
    'configuration'?: string;
    'versionId'?: string;
    'documentId'?: string;
    'workspaceId'?: string;
    'elementId'?: string;
    'idTag'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "type",
            "baseName": "type",
            "type": "BTAssociativeDataParams.TypeEnum"
        },
        {
            "name": "data",
            "baseName": "data",
            "type": "Array<BTNameValuePair>"
        },
        {
            "name": "microversionId",
            "baseName": "microversionId",
            "type": "string"
        },
        {
            "name": "documentMicroversion",
            "baseName": "documentMicroversion",
            "type": "string"
        },
        {
            "name": "associativeDataId",
            "baseName": "associativeDataId",
            "type": "string"
        },
        {
            "name": "operation",
            "baseName": "operation",
            "type": "BTAssociativeDataParams.OperationEnum"
        },
        {
            "name": "viewId",
            "baseName": "viewId",
            "type": "string"
        },
        {
            "name": "occurrenceId",
            "baseName": "occurrenceId",
            "type": "string"
        },
        {
            "name": "isHiddenBaseView",
            "baseName": "isHiddenBaseView",
            "type": "boolean"
        },
        {
            "name": "configuration",
            "baseName": "configuration",
            "type": "string"
        },
        {
            "name": "versionId",
            "baseName": "versionId",
            "type": "string"
        },
        {
            "name": "documentId",
            "baseName": "documentId",
            "type": "string"
        },
        {
            "name": "workspaceId",
            "baseName": "workspaceId",
            "type": "string"
        },
        {
            "name": "elementId",
            "baseName": "elementId",
            "type": "string"
        },
        {
            "name": "idTag",
            "baseName": "idTag",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return BTAssociativeDataParams.attributeTypeMap;
    }
}

export namespace BTAssociativeDataParams {
    export enum TypeEnum {
        ONSHAPEDRAWINGVIEW = <any> 'ONSHAPE_DRAWING_VIEW',
        MODELTOPOLOGY = <any> 'MODEL_TOPOLOGY',
        MODELDEFINITIONFEATURE = <any> 'MODEL_DEFINITION_FEATURE',
        MODELDEFINITIONENTITY = <any> 'MODEL_DEFINITION_ENTITY',
        UNKNOWN = <any> 'UNKNOWN'
    }
    export enum OperationEnum {
        ADD = <any> 'ADD',
        REMOVE = <any> 'REMOVE',
        UPDATE = <any> 'UPDATE'
    }
}
